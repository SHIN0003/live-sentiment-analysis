services:
  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka-kraft
    user: root
    ports:
      - "9092:9092" # Kafka client port
      - "9093:9093" # Kafka controller port
    environment:
      # Kafka process roles and configuration
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      # Kafka topic and log configurations
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_LOG_RETENTION_HOURS: 168
      KAFKA_CFG_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_CFG_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    volumes:
      - ./data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "bash", "-c", "</dev/tcp/kafka/9092"]
      interval: 10s
      timeout: 10s
      retries: 5
      
  producer:
    build:
      context: ./twitter-python
      dockerfile: Dockerfile
    command: python /app/main.py
    volumes:
      - ./twitter-python:/app 
    container_name: producer
    ports:
      - "8080:8000" # Expose Python app on port 8080
    depends_on:
      kafka:
        condition: service_healthy # Ensure Kafka service is healthy before starting the app
    env_file:
      - .env

  consumer:
    build:
      context: ./twitter-python
      dockerfile: Dockerfile
    command: python /app/consumer.py
    volumes:
      - ./twitter-python:/app 
    container_name: consumer
    ports:
      - "8090:8001" # Expose Python app on port 8090
    depends_on:
      kafka:
        condition: service_healthy # Ensure Kafka service is healthy before starting the app
    env_file:
      - .env
  
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

volumes:
  postgres_data: